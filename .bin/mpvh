#!/usr/bin/env python3
"""
MPV wrapper with somewhat stable history support
"""

from sys import argv as cli_args
from subprocess import call as launch
import os
import re


LOG_FILE = os.getenv('MPV_HIST', '/tmp/mpv_history.log')


def main(arguments):
    """
    Execute mpv with the passed params
        and record it to history

    Args:
        arguments: all the arguments, likely passed from cli

    Returns:
        0: if all okay
        !0: if mpv crashed
    """
    mpv_args = ["/usr/bin/mpv"]

    for arg in arguments:
        argument = arg

        if arg[0] != '-' and os.path.isfile(arg):
            realfile = os.path.realpath(arg)
            log_text(realfile)
            argument = realfile
        elif arg == '--last':
            argument = get_last(1)
        elif arg[:2] == '-H':
            argument = get_last(int(arg[2:]))
        elif arg[:7] == '--hist=':
            argument = get_last(int(arg[7:]))
        elif re.match(r'http|//', arg):
            log_text(arg)

        mpv_args.append(argument)

    return launch(mpv_args)


def log_text(text):
    """
    Appends the passed text to the log file

    Args:
        text: Text to be added to log
    """
    with open(LOG_FILE, 'a') as log:
        log.write(text + '\n')


def get_last(nth):
    """
    Gets the nth last line from the LOG_FILE

    Args:
        nth: the reversed-index of the expected line. (i.e. nth-last line)

    Returns:
        the nth-last line from the log file.
        If "nth" is out of range, returns the last line from the log.
    """

    with open(LOG_FILE, 'r') as file_cont:
        log = file_cont.readlines()
        log.reverse()
        if nth > len(log) > 0:
            print('Warning: The specified index does not exist in history.',
                  'Opening the last played file instead.')
            return log[0].strip('\n')
        else:
            return log[nth-1].strip('\n')


if __name__ == "__main__":
    main(cli_args[1:])
